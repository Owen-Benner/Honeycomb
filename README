Terms:
	Choice—Option presented to player
	Action—Decision made by player
	Alpha—Angle from action direction to direction to goal
	Beta—Angle between available choices
	Run—Full execution of program
	Trial—One trip through the maze

Configuration:
	Participant number
	Run number
	Mode: 0 = explore, 1 = maze
	Start delay after keypress (seconds)
	End trial delay (seconds)
	Gray screen time (seconds)
	Warning time (seconds)
	Choice time (seconds)
	Time limit (for explore mode, seconds, -1 for maze mode)
	Travel time between hexes (seconds)
	Rotations allowed per second
	Field of View (degrees)
	Number of Trials
	Trial 0 betas (eight ints, in degrees, spaces between)
	Trial 1 betas
	Trial 2 betas
	...
	Trial 7 betas
	Start hexes (one per trial, column-row, spaces between)
	Goal hex (column-row)

Output (maze):
	Frame
		Frame number
		xPos
		zPos
		Facing
		TrialTime
		RunTime
		DistToGoal
		AngleToGoal
		Difference (signed angle) between bearing to goal and
			player facing
	Trial start
		Trial number
		Starting hexagon number
		Current beta
		RunTime
	Action
		Color of option chosen (1 = blue, 2 = purple)
		isCorrect (int, 0 = false, 1 = true)
		Alpha (angle between choice dir and goal dir)
		TrialTime (exact?)
		RunTime
	Choice start (doesn’t show with trial start)
		Choice number
		Hex number
		Beta
		TrialTime
		RunTime
	On reaching goal
		Hex number
		TrialTime
		RunTime
	Gray screen
		TrialTime (previous trial)
		RunTime
	Timeout
		TrialNum
		TrialTime
		RunTime
	Action
		Color of option chosen (1 = blue, 2 = purple)
		isCorrect (int)
		Alpha
		TrialTime (exact?)
		RunTime

Output (explore):
	Trial start
		Trial num
		Hex num
		RunTime
	Choice start
		Choice num
		Hex num
		TrialTime
		RunTime
	Action
		Move dir
		TrialTime
		RunTime
	Frame
		Frame num
		xPos
		yPos
		Facing
		TrialTime
		RunTime

Choice selection algorithm:
	After correct choice
		For positive beta, round correct choice to right of goal
			for negative beta, left of goal
			Angle from goal to incorrect choice as large as
			...possible
		If incorrect choice leads off map or to prev hex, flip
		...both choices across player-goal axis
			Beta index advances
			If choice flipped and still bad, force new correct
			...choice
	Following incorrect choice
		Always 60 deg between choices
		Alternate left vs right
			Start left on odd trials, right on even
			Reset at trial start
		If incorrect choice leads off map or to prev hex, flip
		...both choices across player-goal axis
			If choice flipped and still bad, force choice
			Advance left/right continuity an extra step
			...(different from after correct)
	When alpha == 0 following 180 degree incorrect choice, offer
	...player a 60 degree choice, not including the hex in the
	...direction of the goal, with both options on the side
	...corresponding to the left/right after incorrect continuity.
		Advance left/right after incorrect continuity.
	If a forced choice leads onto the goal, move to next beta and try
	...again
